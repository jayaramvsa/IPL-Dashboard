{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","match","teamName","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matchList","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","matches","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yZAIaA,EAAkB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACvC,IAAKD,EAAO,OAAO,KACnB,IAAME,EAAYF,EAAMG,QAAUF,EAAWD,EAAMI,MAAQJ,EAAMG,MAC3DE,EAAc,iBAAaH,GAC3BI,EAAaL,IAAaD,EAAMO,YACtC,OACE,sBAAKC,UAAWF,EAAa,2BAA6B,4BAA1D,UACE,gCACE,sBAAME,UAAU,KAAhB,gBACA,6BAAI,cAAC,IAAD,CAAMC,GAAIJ,EAAV,SAA2BH,MAC/B,oBAAIM,UAAU,aAAd,SAA4BR,EAAMU,OAClC,qBAAIF,UAAU,cAAd,gBAAgCR,EAAMW,SACtC,qBAAIH,UAAU,eAAd,UAA8BR,EAAMO,YAApC,WAAyDP,EAAMY,aAA/D,IAA8EZ,EAAMa,aAEtF,sBAAKL,UAAU,oBAAf,UACE,+CACA,4BAAIR,EAAMG,QACV,gDACA,4BAAIH,EAAMI,QACV,kDACA,4BAAIJ,EAAMc,gBACV,yCACA,8BAAId,EAAMe,QAAV,IAAoBf,EAAMgB,kBCtBrBC,G,MAAiB,SAAC,GAAsB,IAArBjB,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,SAC9BC,EAAYF,EAAMG,QAAUF,EAAYD,EAAMI,MAAOJ,EAAMG,MAC3DE,EAAc,iBAAaH,GAC3BI,EAAaL,IAAaD,EAAMO,YACtC,OAAIP,EAEF,sBAAKQ,UAAWF,EAAa,0BAA4B,2BAAzD,UACI,sBAAME,UAAU,KAAhB,gBACA,6BAAI,cAAC,IAAD,CAAMC,GAAIJ,EAAV,SAA2BH,MAC/B,oBAAGM,UAAU,eAAb,UAA6BR,EAAMO,YAAnC,WAAwDP,EAAMY,aAA9D,IAA6EZ,EAAMa,aALvE,O,gBCCPK,EAAW,WAEtB,MAAwBC,mBAAS,CAAEC,UAAW,KAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACQrB,EAAasB,cAAbtB,SAYR,OAXAuB,qBACE,YACiB,uCAAG,8BAAAC,EAAA,sEACOC,MAAM,GAAD,OAAIC,wBAAJ,iBAA+C1B,IAD3D,cACV2B,EADU,gBAEGA,EAASC,OAFZ,OAEVC,EAFU,OAGhBR,EAAQQ,GAHQ,2CAAH,qDAKfC,KACC,CAAC9B,IAGDoB,GAASA,EAAKpB,SAKjB,sBAAKO,UAAU,WAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,oBAAIA,UAAU,YAAd,SAA2Ba,EAAKpB,aAElC,sBAAKO,UAAU,mBAAf,wBAEE,cAAC,WAAD,CACEsB,KAAM,CACJ,CAAEE,MAAO,SAAUC,MAAOZ,EAAKa,aAAeb,EAAKc,UAAWC,MAAO,WACrE,CAAEJ,MAAO,OAAQC,MAAOZ,EAAKc,UAAWC,MAAO,iBAIrD,sBAAK5B,UAAU,uBAAf,UACE,iDACA,cAAC,EAAD,CAAiBP,SAAUoB,EAAKpB,SAAUD,MAAOqB,EAAKD,UAAU,QAEjEC,EAAKD,UAAUiB,MAAM,GAAGC,KAAI,SAAAtC,GAAK,OAAI,cAAC,EAAD,CAA+BC,SAAUoB,EAAKpB,SAAUD,MAAOA,GAA1CA,EAAMuC,OACjE,qBAAK/B,UAAU,YAAf,SACE,cAAC,IAAD,CAAMC,GAAE,iBAAYR,EAAZ,oBAAgC0B,QAAxC,yBAvBG,iDCrBEa,G,YAAe,SAAC,GAMzB,IAN2C,IAAhBvC,EAAe,EAAfA,SAEvBwC,EAAQ,GAIHC,EAHSf,OAGMe,GAFRf,OAEsBe,IAClCD,EAAME,KAAKD,GAIf,OACI,oBAAIlC,UAAU,eAAd,SACKiC,EAAMH,KAAI,SAAAM,GAAI,OACX,6BACI,cAAC,IAAD,CAAMnC,GAAE,iBAAYR,EAAZ,oBAAgC2C,GAAxC,SAAiDA,KAD5CA,UCVZC,EAAY,WAErB,MAA8B1B,mBAAS,IAAvC,mBAAO2B,EAAP,KAAgBC,EAAhB,KACA,EAA2BxB,cAAnBtB,EAAR,EAAQA,SAAU2C,EAAlB,EAAkBA,KAYlB,OAXApB,qBACI,YACsB,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,8BAAD,OAA+BzB,EAA/B,yBAAwD2C,IADnE,cACXhB,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBiB,EAAWjB,GAHM,2CAAH,qDAKlBkB,KACD,CAAC/C,EAAU2C,IAId,sBAAKpC,UAAU,YAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,sCACA,cAAC,EAAD,CAAcP,SAAUA,OAE5B,gCACI,qBAAIO,UAAU,eAAd,UAA8BP,EAA9B,eAAoD2C,KAEhDE,EAAQR,KAAI,SAAAtC,GAAK,OAAI,cAAC,EAAD,CAAgCC,SAAUA,EAAUD,MAAOA,GAArCA,EAAMuC,cC5BxDU,G,MAAW,SAAC,GAAkB,IAAhBhD,EAAe,EAAfA,SAGvB,OACI,qBAAKO,UAAU,WAAf,SACI,6BACI,cAAC,IAAD,CAAMC,GAAE,iBAAYR,GAApB,SACKA,UCNRiD,G,MAAW,WAEpB,MAA0B/B,mBAAS,IAAnC,mBAAOgC,EAAP,KAAcC,EAAd,KAYA,OAXA5B,qBACI,YACuB,uCAAG,8BAAAC,EAAA,sEACKC,MAAM,GAAD,OAAIC,wBAAJ,UADV,cACZC,EADY,gBAECA,EAASC,OAFV,OAEZC,EAFY,OAGlBsB,EAAStB,GAHS,2CAAH,qDAKnBuB,KACD,IAIH,sBAAK7C,UAAU,WAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,oBAAIA,UAAU,WAAd,6BAEJ,qBAAKA,UAAU,YAAf,SACE2C,EAAMb,KAAI,SAAAjB,GAAI,OAAI,cAAC,EAAD,CAAwBpB,SAAUoB,EAAKpB,UAAxBoB,EAAKkB,cCArCe,MApBf,WACE,OACE,qBAAK9C,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+C,KAAK,iCAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cCLGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.281f938e.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport './MatchDetailCard.scss'\r\n\r\nexport const MatchDetailCard = ({ match, teamName }) => {\r\n  if (!match) return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n  return (\r\n    <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n      <div>\r\n        <span className=\"vs\">vs</span>\r\n        <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n        <h2 className=\"match-date\">{match.date}</h2>\r\n        <h3 className=\"match-venue\">at {match.venue}</h3>\r\n        <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n      </div>\r\n      <div className=\"additional-detail\">\r\n        <h3>First Innings</h3>\r\n        <p>{match.team1}</p>\r\n        <h3>Second Innings</h3>\r\n        <p>{match.team2}</p>\r\n        <h3>Man of the match</h3>\r\n        <p>{match.playerOfMatch}</p>\r\n        <h3>Umpires</h3>\r\n        <p>{match.umpire1},{match.umpire2}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { React } from 'react';\r\nimport{ Link } from 'react-router-dom'\r\nimport './MatchSmallCard.scss';\r\n\r\nexport const MatchSmallCard = ({match,teamName}) => {\r\n  const otherTeam = match.team1 === teamName ?  match.team2: match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n  if(!match) return null;\r\n  return (\r\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n        <span className=\"vs\">vs</span>\r\n        <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n        <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n    </div>\r\n  );\r\n}\r\n","import { React, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard.js';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard.js';\r\nimport './TeamPage.scss';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const TeamPage = () => {\r\n\r\n  const [team, setTeam] = useState({ matchList: [] });\r\n  const { teamName } = useParams();\r\n  useEffect(\r\n    () => {\r\n      const fetchTeam = async () => {\r\n        const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n        const data = await response.json();\r\n        setTeam(data);\r\n      };\r\n      fetchTeam();\r\n    }, [teamName]\r\n  );\r\n\r\n  if (!team || !team.teamName) {\r\n    return <h1>Team Not Found</h1>\r\n  }\r\n\r\n  return (\r\n    <div className=\"TeamPage\">\r\n      <div className=\"team-name-section\">\r\n        <h1 className=\"team-name\">{team.teamName}</h1>\r\n      </div>\r\n      <div className=\"win-loss-section\">\r\n        Wins/Losses\r\n        <PieChart\r\n          data={[\r\n            { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#c21a1a' },\r\n            { title: 'Wins', value: team.totalWins, color: '#4fd84f' },\r\n          ]}\r\n        />\r\n      </div>\r\n      <div className=\"match-detail-section\">\r\n        <h3> Latest Matches</h3>\r\n        <MatchDetailCard teamName={team.teamName} match={team.matchList[0]} />\r\n      </div>\r\n      {team.matchList.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\r\n      <div className=\"more-link\">\r\n        <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({ teamName }) => {\r\n\r\n    let years = [];\r\n    const startyear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let i = startyear; i <= endYear; i++) {\r\n        years.push(i);\r\n    }\r\n\r\n\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n            {years.map(year => (\r\n                <li key={year}>\r\n                    <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n                </li>\r\n            ))}\r\n        </ol>\r\n\r\n    )\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard.js';\r\nimport './MatchPage.scss'\r\nimport { YearSelector } from '../components/YearSelector.js';\r\n\r\n\r\n\r\nexport const MatchPage = () => {\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const { teamName, year } = useParams();\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`http://localhost:8080/team/${teamName}/matches?year=${year}`);\r\n                const data = await response.json();\r\n                setMatches(data);\r\n            };\r\n            fetchMatches();\r\n        }, [teamName, year]\r\n    );\r\n\r\n    return (\r\n        <div className=\"MatchPage\">\r\n            <div className=\"year-selector\">\r\n                <h3>Year</h3>\r\n                <YearSelector teamName={teamName} />\r\n            </div>\r\n            <div>\r\n                <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n                {\r\n                    matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './TeamTile.scss';\r\n\r\nexport const TeamTile = ({ teamName }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                <Link to={`/teams/${teamName}`}>\r\n                    {teamName}\r\n                </Link>\r\n            </h1>\r\n        </div>\r\n    )\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { TeamTile } from '../components/TeamTile.js';\r\nimport './HomePage.scss';\r\n\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [teams, setTeams] = useState([]);\r\n    useEffect(\r\n        () => {\r\n            const fetchAllTeams = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\r\n                const data = await response.json();\r\n                setTeams(data);\r\n            };\r\n            fetchAllTeams();\r\n        }, []\r\n    );\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className=\"header-section\">\r\n                <h1 className=\"app-name\">IPL Dashboard</h1>\r\n            </div>\r\n            <div className=\"team-grid\">\r\n            { teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import './App.scss';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}